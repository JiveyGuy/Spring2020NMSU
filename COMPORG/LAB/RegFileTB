Library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

Library work;
use work.DecodeLogic.All;
 
ENTITY TestRegFile IS
END TestRegFile;
 
ARCHITECTURE behavior OF TestRegFile IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
   COMPONENT RegFile IS
	PORT( 	
		Asel : IN 	STD_LOGIC_VECTOR(4  DOWNTO 0);
		Bsel : IN 	STD_LOGIC_VECTOR(4  DOWNTO 0);
		Dsel : IN 	STD_LOGIC_VECTOR(4  DOWNTO 0);
		Din  : IN 	STD_LOGIC_VECTOR(31  DOWNTO 0);
		Strb : IN 	STD_LOGIC;
		Aout : OUT 	STD_LOGIC_VECTOR(31 DOWNTO 0);
		Bout : OUT 	STD_LOGIC_VECTOR(31 DOWNTO 0)
	);
   END COMPONENT;

   --Inputs
   signal Asel : STD_LOGIC_VECTOR(4  DOWNTO 0);
   signal Bsel : STD_LOGIC_VECTOR(4  DOWNTO 0);
   signal Dsel : STD_LOGIC_VECTOR(4  DOWNTO 0);
	signal Din  : STD_LOGIC_VECTOR(31  DOWNTO 0);
	signal Strb : std_logic := '0';

   --Outputs
   signal Aout : STD_LOGIC_VECTOR(31  DOWNTO 0);
   signal Bout : STD_LOGIC_VECTOR(31  DOWNTO 0);

 
BEGIN
   -- Instantiate the Unit Under Test (UUT)
   x: RegFile PORT MAP (
		Asel => Asel,
		Bsel => Bsel,
		Dsel => Dsel,
		Din  => Din,
		Strb => Strb
   );

   stim_proc: process begin
	wait for 5ns;
	--   	 Writting to RegFile
	Strb <= '1';
	Din <= "11111111111111111111111111111111";
	Dsel <= "00001";
	wait for 2ns;

--	Din <= "11111111111111111111111111111111";
--	Dsel <= "00010";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "00011";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "00100";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "00101";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "00110";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "00111";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "01000";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "01001";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "01010";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "01011";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "01100";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "01101";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "01110";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "01111";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "10000";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "10001";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "10010";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "10011";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "10100";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "10101";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "10110";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "10111";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "11000";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "11001";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "11010";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "11011";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "11100";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "11101";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "11110";
--	wait for 2ns;
--
--	Din <= "11111111111111111111111111111111";
--	Dsel <= "11111";
	wait for 2ns;
--		  testing If Value written for both A and B

	Strb <= '0';
	Asel <= "00001";
	Bsel <= "00001";
	wait for 4ns;
--
--	Asel <= "00010";
--	Bsel <= "00010";
--	wait for 4ns;
--
--	Asel <= "00011";
--	Bsel <= "00011";
--	wait for 4ns;
--
--	Asel <= "00100";
--	Bsel <= "00100";
--	wait for 4ns;
--
--	Asel <= "00101";
--	Bsel <= "00101";
--	wait for 4ns;
--
--	Asel <= "00110";
--	Bsel <= "00110";
--	wait for 4ns;
--
--	Asel <= "00111";
--	Bsel <= "00111";
--	wait for 4ns;
--
--	Asel <= "01000";
--	Bsel <= "01000";
--	wait for 4ns;
--
--	Asel <= "01001";
--	Bsel <= "01001";
--	wait for 4ns;
--
--	Asel <= "01010";
--	Bsel <= "01010";
--	wait for 4ns;
--
--	Asel <= "01011";
--	Bsel <= "01011";
--	wait for 4ns;
--
--	Asel <= "01100";
--	Bsel <= "01100";
--	wait for 4ns;
--
--	Asel <= "01101";
--	Bsel <= "01101";
--	wait for 4ns;
--
--	Asel <= "01110";
--	Bsel <= "01110";
--	wait for 4ns;
--
--	Asel <= "01111";
--	Bsel <= "01111";
--	wait for 4ns;
--
--	Asel <= "10000";
--	Bsel <= "10000";
--	wait for 4ns;
--
--	Asel <= "10001";
--	Bsel <= "10001";
--	wait for 4ns;
--
--	Asel <= "10010";
--	Bsel <= "10010";
--	wait for 4ns;
--
--	Asel <= "10011";
--	Bsel <= "10011";
--	wait for 4ns;
--
--	Asel <= "10100";
--	Bsel <= "10100";
--	wait for 4ns;
--
--	Asel <= "10101";
--	Bsel <= "10101";
--	wait for 4ns;
--
--	Asel <= "10110";
--	Bsel <= "10110";
--	wait for 4ns;
--
--	Asel <= "10111";
--	Bsel <= "10111";
--	wait for 4ns;
--
--	Asel <= "11000";
--	Bsel <= "11000";
--	wait for 4ns;
--
--	Asel <= "11001";
--	Bsel <= "11001";
--	wait for 4ns;
--
--	Asel <= "11010";
--	Bsel <= "11010";
--	wait for 4ns;
--
--	Asel <= "11011";
--	Bsel <= "11011";
--	wait for 4ns;
--
--	Asel <= "11100";
--	Bsel <= "11100";
--	wait for 4ns;
--
--	Asel <= "11101";
--	Bsel <= "11101";
--	wait for 4ns;
--
--	Asel <= "11110";
--	Bsel <= "11110";
--	wait for 4ns;
--
--	Asel <= "11111";
--	Bsel <= "11111";
--	wait for 4ns;
   end process;
END;
